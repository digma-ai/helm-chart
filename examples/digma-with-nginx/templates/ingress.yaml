apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-analytics-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: analytics.{{ required "'domain' variable was not set" .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ tpl .Values.digma.digmaAnalytics.host . }}
            port:
              number: 5051

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-collector-http-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: collector-http.{{ required "'domain' variable was not set" .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ tpl .Values.digma.digmaCollectorApi.host . }}
            port:
              number: 5049

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-collector-grpc-ingress
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
spec:
  ingressClassName: nginx
  rules:
  - host: collector-grpc.{{ required "'domain' variable was not set" .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ tpl .Values.digma.digmaCollectorApi.host . }}
            port:
              number: 5050

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-jaeger-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: jaeger.{{ required "'domain' variable was not set" .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ tpl .Values.digma.embeddedJaeger.host . }}
            port:
              number: 16686