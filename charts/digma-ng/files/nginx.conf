events { }

http {
    upstream jaeger {
        server {{ include "digma.jaeger" . }}:{{ .Values.jaeger.service.ports.http_ui }};
    }
    upstream digma {
        server {{ include "digma.analytics-api" . }}:{{ .Values.analyticsApi.service.ports.http}};
    }
    port_in_redirect off;
    absolute_redirect off;

    #
    # digma ui
    #
    server {
        listen {{ .Values.ui.service.ports.http}};
        root /app;

        location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        location /admin {
            # Call /auth/validate before serving the request
            auth_request /auth/validate;
            # Catch the cookies from /auth/validate
            auth_request_set $auth_cookies $upstream_http_set_cookie;
            # Forward the cookie to th client
            add_header Set-Cookie $auth_cookies;
            auth_request_set $auth_fail_reason $upstream_http_x_auth_fail_reason;
            error_page 401 = @error401;
        }

        location /api/ {
            proxy_pass          {{ include "digma.analytics-api.protocol" .}}://digma/;
            proxy_set_header    X-Original-URI $request_uri;
            proxy_set_header    Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }

        location @error401 {
            add_header X-Auth-Fail-Reason $auth_fail_reason;
            return 302 /login/index.html?return_url=$request_uri;
        }

        location /login {
            root /app;
        }
  
        location /auth/validate {
            internal;
            proxy_pass              {{ include "digma.analytics-api.protocol" .}}://digma/authentication/web/validate-or-refresh;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }

        location /auth/login {
            proxy_pass              {{ include "digma.analytics-api.protocol" .}}://digma/authentication/web/login;
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }

        location /auth/logout {
            proxy_pass              {{ include "digma.analytics-api.protocol" .}}://digma/authentication/web/logout;
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }
    }

    #
    # jaeger auth proxy
    #
    server {
        listen {{ .Values.jaeger.service.ports.http_ui }};

        location / {
            # Call /auth/validate before serving the request
            auth_request /auth/validate;
            # Catch the cookie from /auth/validate
            auth_request_set $auth_cookie $upstream_http_set_cookie;
            # Forward the cookie to th client
            add_header Set-Cookie $auth_cookie;
            # Catch header "X-Auth-Fail-Reason" from /auth/validate
            auth_request_set $auth_fail_reason $upstream_http_x_auth_fail_reason;

            proxy_pass http://jaeger;
        }

        error_page 401 = @error401;

        location @error401 {
            # Forward header "X-Auth-Fail-Reason" to the client as part of the redirect response
            add_header X-Auth-Fail-Reason $auth_fail_reason;
            return 302 /login/index.html?return_url=$request_uri;
        }

        location /health {
            access_log off;
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        location /favicon.ico {
            root /app;
            log_not_found off;
            access_log off;
        }

        location /login {
            root /app;
        }        

        location /auth/validate {
            internal;
            proxy_pass              {{ include "digma.analytics-api.protocol" .}}://digma/authentication/web/validate-or-refresh;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }

        location /auth/login {
            proxy_pass              {{ include "digma.analytics-api.protocol" .}}://digma/authentication/web/login;
            proxy_set_header        X-Original-URI $request_uri;
            proxy_set_header        Digma-Access-Token {{ printf "Token %s" (.Values.digma.accessToken) | quote }};
        }
    }
}