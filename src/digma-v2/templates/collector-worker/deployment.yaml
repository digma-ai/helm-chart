apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "digma.collector-worker" . }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: collector-worker
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.collectorWorker.podLabels .Values.commonLabels ) "context" . ) }}
  replicas: {{ include "replicas.value" (dict "value" .Values.collectorWorker.replicas "context" .) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: collector-worker
  template:
    metadata:
      labels: 
        {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: collector-worker
      annotations:
        {{- if .Values.commonAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
        {{- end }}
        {{- if .Values.collectorWorker.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.collectorWorker.podAnnotations "context" .) | nindent 8 }}
        {{- end }}
    spec:
      {{- include "common.images.pullSecrets" ( dict "images" (list .Values.collectorWorker.image) "global" .Values.global) | nindent 6 }}
      {{- if .Values.collectorWorker.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.collectorWorker.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.collectorWorker.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.collectorWorker.nodeSelector "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.collectorWorker.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.collectorWorker.tolerations "context" .) | nindent 8 }}
      {{- end }}
      containers:
      - name: digma-collector-worker
        image: {{ include "common.images.image" (dict "imageRoot" .Values.collectorWorker.image "global" .Values.global "chart" .Chart) }}
        imagePullPolicy: {{ .Values.collectorWorker.image.pullPolicy }}
        resources: {{- toYaml .Values.collectorWorker.resources | nindent 12 }}
        env:
        {{- include "env.isCentralize" . | nindent  8 }}
        {{- include "env.licenseKey" . | nindent  8 }}
        {{- include "env.digmaEnv" . | nindent  8 }}
        {{- include "env.digmaSite" . | nindent  8 }}
        {{- include "env.otlp" . | nindent  8 }}
        {{- include "env.redis" . | nindent  8 }}
        {{- include "env.influx" . | nindent  8 }}
        {{- include "env.postgres" . | nindent  8 }}
        {{- include "env.kafka" . | nindent  8 }}
        {{- include "env.versions" . | nindent  8 }}
        {{- include "env.jaeger" . | nindent  8 }}
        {{- include "env.digmaEnvType" . | nindent 8 }}
        - name: BACKEND_DEPLOYMENT_TYPE
          value: {{ .Values.deploymentType | quote}}
        {{- range $index, $element := .Values.collectorWorker.app.ignoreEndpoints }}
        - name: Filter__IgnoreEndpoints__{{$index}}__Route
          value: {{ $element.Route | quote }}
        - name: Filter__IgnoreEndpoints__{{$index}}__RouteRegex
          value: {{ $element.RouteRegex | quote }}
        - name: Filter__IgnoreEndpoints__{{$index}}__Method
          value: {{ $element.Method | quote }}
        - name: Filter__IgnoreEndpoints__{{$index}}__Service
          value: {{ $element.Service | quote }}
        {{- end }} 
        {{- include "common.tplvalues.render" (dict "value" .Values.collectorWorker.env "context" $) | nindent 8 }}