## @section Global Digma parameters
## @param digma.deployment.size [default: medium], replicas based on a given preset
## @param digma.accessToken [default: empty] Unique key youâ€™ll need to provide any IDE that connects to this Digma instance, you can choose any token you'd like
## @param digma.licenseKey license key provided by Digma
##
digma:
  deployment:
    #replicas based on a given preset
    size: medium
  accessToken: 
  licenseKey:

## @section Observability parameters
## @param observability.useLocal [default: true]
## @param observability.siteName [default: undefined]
## @param observability.environmentName [default: digma], Environments represent different deployment stages or scopes.
## @param observability.otlp.remoteEndpoint Please note this parameter, cannot be set while useLocal is true
## @param observability.otlp.samplerProbability [default: 0.1]
## @param observability.otlp.exportTraces [default: true]
## @param observability.otlp.exportMetrics [default: true]
##
observability:
  useLocal: true
  siteName: undefined
  environmentName: digma
  otlp:
    remoteEndpoint:
    samplerProbability: 0.1
    exportTraces: true
    exportMetrics: true

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters
## @param global.imagePullSecrets Global Docker registry secret names as an array
##
global:
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []

## @section Common parameters

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""

## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}

## @section CollectorWorker parameters
##
collectorWorker:
  ## @param collectorWorker.image.registry [default: docker.io] collectorWorker image registry
  ## @param collectorWorker.image.repository [default: digmatic/digma-collector-worker] collectorWorker image repository
  ## @param collectorWorker.image.pullPolicy collectorWorker image pull policy
  ## @param collectorWorker.image.pullSecrets collectorWorker image pull secrets
  image:
    registry: docker.io
    repository: digmatic/digma-collector-worker
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param collectorWorker.replicas [default: replicas based on a given preset(.Values.digma.deployment.size)] Number of collectorWorker replicas to deploy
  ##
  replicas: "{{ index .Values.presets .Values.digma.deployment.size \"collectorWorker\" \"replicas\" }}"
  ## @skip collectorWorker.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 300Mi
      cpu: 300m
    limits: 
      memory: 600Mi
      cpu: 600m
  ## @param collectorWorker.podLabels Extra labels for collectorWorker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param collectorWorker.podAnnotations Annotations for collectorWorker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## @param collectorWorker.affinity Affinity for collectorWorker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `controller.podAffinityPreset`, `controller.podAntiAffinityPreset`, and `controller.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param collectorWorker.nodeSelector Node labels for collectorWorker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param collectorWorker.tolerations Tolerations for collectorWorker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param collectorWorker.extraEnvVars Array with extra environment variables to add to collectorWorker
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param collectorWorker.env.Sampling__Enable [default: true] Sampling Enable
  ## @param collectorWorker.env.ExtendedObservability__Enable [default: true]ExtendedObservability__Enable
  ## @param collectorWorker.env.TraceTempStorage__TraceForJaegerExpirationInMinutes [default: 10] TraceTempStorage__TraceForJaegerExpirationInMinutes
  ## @param collectorWorker.env.BlockedTrace__TraceSpansLimit [default: 3000] BlockedTrace__TraceSpansLimit
  ## @param collectorWorker.env.ThresholdOptions__RecentActivityUpdateThresholdSeconds [default: 5] ThresholdOptions__RecentActivityUpdateThresholdSeconds
  env:
    Sampling__Enable: true
    ExtendedObservability__Enable: true
    TraceTempStorage__TraceForJaegerExpirationInMinutes: 10
    BlockedTrace__TraceSpansLimit: 3000
    ThresholdOptions__RecentActivityUpdateThresholdSeconds: 5
  ## @skip collectorWorker.app
  ##
  app:
    ignoreEndpoints:
      - Route: "/health"
        RouteRegex: ""
        Method: "GET"
        Service: "*"
      - Route: "/healthcheck"
        RouteRegex: ""
        Method: "GET"
        Service: "*"
      - Route: "/metrics"
        RouteRegex: ""
        Method: "GET"
        Service: "*"
## @section otelCollector parameters
##
otelCollector:
  ## @param otelCollector.samplingPercentage telemetry data that should be sampled and sent to the backend
  samplingPercentage: 100
  ## @param otelCollector.existingConfigmap The name of an existing ConfigMap with your custom configuration
  ##
  existingConfigmap: ""
  ## @param otelCollector.existingConfigmapKey The name of the key with the config file
  ##
  existingConfigmapKey: ""
  ## @param otelCollector.image.registry [default: docker.io] otelCollector image registry
  ## @param otelCollector.image.repository [default: otel/opentelemetry-collector-contrib] otelCollector image repository
  ## @param otelCollector.image.tag [default: 0.103.0] otelCollector image tag
  ## @param otelCollector.image.pullPolicy otelCollector image pull policy
  ## @param otelCollector.image.pullSecrets otelCollector image pull secrets
  image:
    registry: docker.io
    repository: otel/opentelemetry-collector-contrib
    tag: 0.103.0
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param otelCollector.replicas Number of otelCollector replicas to deploy
  ##
  replicas: 1
  ## @skip otelCollector.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 300Mi
  ## otelCollector service parameters
  ##
  service:
    ## @param otelCollector.service.type otelCollector service type
    ##
    type: ClusterIP
    ## @param otelCollector.service.annotations Additional custom annotations for otelCollector service
    ##
    annotations: {}
    ## @param otelCollector.service.ports.health health check service port
    ## @param otelCollector.service.ports.grpc otelCollector gRPC port
    ## @param otelCollector.service.ports.http otelCollector HTTP port
    ##
    ports:
      health: 13133
      grpc: 4317
      http: 4318
  ## @param otelCollector.podLabels Extra labels for otelCollector pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param otelCollector.podAnnotations Extra labels for otelCollector pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podAnnotations: {}
  ## @param otelCollector.nodeSelector Node labels for otelCollector pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param otelCollector.tolerations Tolerations for otelCollector pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## otelCollector gRPC ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  grpc:
    ingress:
      ## @param otelCollector.grpc.ingress.enabled Enable ingress record generation for otelCollector
      ##
      enabled: false
      ## @param otelCollector.grpc.ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param otelCollector.grpc.ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion: ""
      ## @param otelCollector.grpc.ingress.hostname Default host for the ingress record
      ##
      hostname: 
      ## @param otelCollector.grpc.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName:
      ## @param otelCollector.grpc.ingress.path The Path to otelCollector. You may need to set this to '/*' in order to use this with ALB ingress controllers.
      ##
      path: /
      ## @param otelCollector.grpc.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ##
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations:
      ## @param otelCollector.grpc.ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
      ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param otelCollector.grpc.ingress.extraRules Additional rules to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## e.g:
      ## extraRules:
      ## - host: example.local
      ##     http:
      ##       path: /
      ##       backend:
      ##         service:
      ##           name: example-svc
      ##           port:
      ##             name: http
      ##
      extraRules: []
  ## otelCollector HTTP ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  http:
    ingress:
      ## @param otelCollector.http.ingress.enabled Enable ingress record generation for otelCollector
      ##
      enabled: false
      ## Ingress Path type
      ##
      pathType: ImplementationSpecific
      ## @param otelCollector.http.ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion: ""
      ## @param otelCollector.http.ingress.hostname Default host for the ingress record
      ##
      hostname:
      ## @param otelCollector.http.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName:
      ## @param otelCollector.http.ingress.path The Path to otelCollector. You may need to set this to '/*' in order to use this with ALB ingress controllers.
      ##
      path: /
      ## @param otelCollector.http.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## For a full list of possible ingress annotations, please see
      ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ##
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {}
      ## @param otelCollector.http.ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
      ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param otelCollector.http.ingress.extraRules Additional rules to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
      ## e.g:
      ## extraRules:
      ## - host: example.local
      ##     http:
      ##       path: /
      ##       backend:
      ##         service:
      ##           name: example-svc
      ##           port:
      ##             name: http
      ##
      extraRules: []
collectorApi:
  ## @param collectorApi.image.registry [default: REGISTRY_NAME] collectorApi image registry
  ## @param collectorApi.image.repository [default: REPOSITORY_NAME/prometheus] collectorApi image repository
  ## @param collectorApi.image.pullPolicy collectorApi image pull policy
  ## @param collectorApi.image.pullSecrets collectorApi image pull secrets
  image:
    registry: docker.io
    repository: digmatic/digma-collector
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param collectorApi.replicas Number of collectorApi replicas to deploy
  ##
  replicas: 1
  ## @skip collectorApi.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources:
    requests: 
      memory: 100Mi
      cpu: 200m
    limits: 
      memory: 600Mi
      cpu: 800m
  service:
    ## service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ##  Annotations for service
    ##
    annotations: {}

    ports:
      internal: 5048
      grpc: 5050
      http: 5049

  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
analyticsApi:
  ## @param analyticsApi.image.registry [default: docker.io] analyticsApi image registry
  ## @param analyticsApi.image.repository [default: digmatic/digma-analytics] analyticsApi image repository
  ## @param analyticsApi.image.pullPolicy analyticsApi image pull policy
  ## @param analyticsApi.image.pullSecrets analyticsApi image pull secrets
  image:
    registry: docker.io
    repository: digmatic/digma-analytics
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  secured: false # must be false if ingress.enabled=true
  ## @param analyticsApi.replicas Number of analyticsApi replicas to deploy
  ##
  replicas: 1
  ## @skip analyticsApi.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 300Mi
      cpu: 100m
    limits: 
      memory: 800Mi
      cpu: 800m
  service:
    ## Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ports:
      http: 5051
    ## Annotations for service
    ##
    annotations: {}
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## analyticsApi ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## @param analyticsApi.ingress.enabled Enable ingress record generation for otelCollector
    ##
    enabled: false
    ## Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param analyticsApi.ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param analyticsApi.ingress.hostname Default host for the ingress record
    ##
    hostname:
    ## @param analyticsApi.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param analyticsApi.ingress.path The Path to analyticsApi. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param analyticsApi.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
    ## @param analyticsApi.ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param analyticsApi.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
measurementAnalysis:
  ## @param measurementAnalysis.image.registry [default: docker.io] measurementAnalysis image registry
  ## @param measurementAnalysis.image.repository [default: digmatic/digma-measurement-analysis] measurementAnalysis image repository
  ## @param measurementAnalysis.image.pullPolicy measurementAnalysis image pull policy
  ## @param measurementAnalysis.image.pullSecrets measurementAnalysis image pull secrets
  image:
    registry: docker.io
    repository: digmatic/digma-measurement-analysis
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
 
  ## @param measurementAnalysis.replicas [default: replicas based on a given preset(.Values.digma.deployment.size)] Number of analyticsApi replicas to deploy
  ##
  replicas: "{{ index .Values.presets .Values.digma.deployment.size \"measurementAnalysis\" \"replicas\" }}"
  ## @skip measurementAnalysis.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 100Mi
      cpu: 200m
    limits: 
      memory: 800Mi
      cpu: 800m
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param measurementAnalysis.extraEnvVars Array with extra environment variables to add to measurementAnalysis
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  env:
    ThresholdOptions__UpsertEndpointThresholdSeconds: 5
    ThresholdOptions__UpsertSpansThresholdSeconds: 5
    ThresholdOptions__UpsertSpanFlowMetadataThresholdSeconds: 5
scheduler:
  ## @param scheduler.image.registry [default: docker.io] scheduler image registry
  ## @param scheduler.image.repository [default: digmatic/digma-scheduler] scheduler image repository
  ## @param scheduler.image.pullPolicy scheduler image pull policy
  ## @param scheduler.image.pullSecrets scheduler image pull secrets
  image:
    registry: docker.io
    repository: digmatic/digma-scheduler
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param scheduler.replicas Number of scheduler replicas to deploy
  ##
  replicas: 1
  ## @skip scheduler.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 300Mi
      cpu: 200m
    limits: 
      memory: 600Mi
      cpu: 500m
  service:
    ## service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ##  Annotations for service
    ##
    annotations: {}

    ports:
      internal: 3053

  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
pipelineWorker:
  image:
    ## @param pipelineWorker.image.registry [default: docker.io] pipelineWorker image registry
    ## @param pipelineWorker.image.repository [default: digmatic/digma-pipeline-worker] pipelineWorker image repository
    ## @param pipelineWorker.image.pullPolicy pipelineWorker image pull policy
    ## @param pipelineWorker.image.pullSecrets pipelineWorker image pull secrets
    registry: docker.io
    repository: digmatic/digma-pipeline-worker
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param pipelineWorker.replicas [default: replicas based on a given preset(.Values.digma.deployment.size)] Number of pipelineWorker replicas to deploy
  ##
  replicas: "{{ index .Values.presets .Values.digma.deployment.size \"pipelineWorker\" \"replicas\" }}"
  ## @skip pipelineWorker.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 100Mi
      cpu: 50m
    limits: 
      memory: 400Mi
      cpu: 500m
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity: {}
  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
ui:
  ## @param ui.image.registry [default: docker.io] ui image registry
  ## @param ui.image.repository [default: digmaai/digma-ui] ui image repository
  ## @param ui.image.tag [default: 2.1.4] ui image tag
  ## @param ui.image.pullPolicy ui image pull policy
  ## @param ui.image.pullSecrets ui image pull secrets
  image:
    registry: docker.io
    repository: digmaai/digma-ui
    tag: 2.1.4
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param ui.replicas Number of ui replicas to deploy
  ##
  replicas: 1
  ## @skip ui.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 100Mi
      cpu: 100m
    limits: 
      memory: 200Mi
      cpu: 200m
    
  service:
    ## Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP
    ports:
      http: 80
    ## Annotations for service
    ##
    annotations: {}
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## ui ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## Enable ingress controller resource
    ##
    enabled: false
    ## Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param ui.ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ui.ingress.hostname Default host for the ingress record
    ##
    hostname:
    ## @param ui.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: "alb"
    ## @param ui.ingress.path The Path to ui. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param ui.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
    ## @param ui.ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ui.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []

metricsExporter:
  ## @param metricsExporter.image.registry [default: docker.io] metricsExporter image registry
  ## @param metricsExporter.image.repository [default: digmatic/k8s-metrics-exporter] metricsExporter image repository
  ## @param metricsExporter.image.tag ui image tag
  ## @param metricsExporter.image.pullPolicy metricsExporter image pull policy
  ## @param metricsExporter.image.pullSecrets metricsExporter image pull secrets
  image:
    registry: docker.io
    repository: digmatic/k8s-metrics-exporter
    tag: 0.0.10-alpha.3
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param metricsExporter.replicas Number of metricsExporter replicas to deploy
  ##
  replicas: 1
  ## @skip metricsExporter.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 512Mi
      cpu: 500m
    limits: 
      memory: 768Mi
      cpu: 750m
  service:
    ports:
      http: 9091
    ## Annotations for service
    ##
    annotations: {}
  serviceAccount:
    annotations: {}

  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
otelCollectorDf:
  fullnameOverride: "digma-otel-collector-df" # because we need to use this name other value in file
  ## @param otelCollectorDf.image.registry [default: docker.io] otelCollectorDf image registry
  ## @param otelCollectorDf.image.repository [default: otel/opentelemetry-collector-contrib] otelCollectorDf image repository
  ## @param otelCollectorDf.image.tag [default:  0.103.0] otelCollectorDf image tag
  ## @param otelCollectorDf.image.pullPolicy otelCollectorDf image pull policy
  ## @param otelCollectorDf.image.pullSecrets otelCollectorDf image pull secrets
  image:
    registry: docker.io
    repository: otel/opentelemetry-collector-contrib
    tag: 0.103.0
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param otelCollectorDf.replicas Number of otelCollectorDf replicas to deploy
  ##
  replicas: 1
  ## @skip otelCollectorDf.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 200m
      memory: 300Mi
  service:
    ## @param Annotations for service
    ##
    annotations: {}
    ports:
      grpc: 4317
      prometheus_scraper: 8889
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ##  Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ##  Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ##  Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
## @skip influxdb
## ref: https://github.com/bitnami/charts/blob/main/bitnami/influxdb/values.yaml
##
influxdb:
  resources: 
    requests: 
      memory: 500Mi
      cpu: 500m
    limits: 
      memory: 2Gi
      cpu: 2000m
  auth:
    user:
      org: digma
      username: admin
      password: "12345678"
      bucket: errors
    admin:
      org: digma
      username: admin
      password: "12345678"
      token: dc61908e-05bc-411a-9fe2-e3356b8dc7c0
      bucket: errors
      retention: 4w
  service:
    ports:
      http: 8086
  persistence:
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: 50Gi
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
## @skip postgresql
## ref: https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
##
postgresql:
  enabled: true
  auth:
    database: postgres
    username: postgres
    password: postgres
    enablePostgresUser: false
  architecture: standalone
  containerPorts:
    postgresql: 5432
  primary:
    resources:
      requests: 
        memory: 1Gi
        cpu: 200m
      limits: 
        memory: 2Gi
        cpu: 1000m
      
    
    networkPolicy:
      enabled: false
    service:
      ports:
        postgresql: 5432
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 20Gi
    extendedConfiguration: |
      shared_buffers = '800MB'
      logging_collector = on
      log_directory ='log'

    extraEnvVars:
      - name: POSTGRESQL_MAX_CONNECTIONS
        value: "400"

    ## Extra labels for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## Annotations for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Node labels for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
## @skip redis
## ref: https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
##
redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  master:
    extraFlags:
        ## The maxmemory configuration directive is used in order to configure Redis(R) to use a specified
        ## amount of memory for the data set. Setting maxmemory to zero results into no memory limits
        ## see https://redis.io/topics/lru-cache for more details
        ##
        - "--maxmemory 2g"
        ## The exact behavior Redis(R) follows when the maxmemory limit is reached is configured using the
        ## maxmemory-policy configuration directive
        ## allkeys-lru: evict keys by trying to remove the less recently used (LRU) keys first, in order
        ## to make space for the new data added
        ##
        - "--maxmemory-policy allkeys-lru"
    resources:
      requests:
        memory: "100Mi"
        cpu: "50m"
      limits:
        memory: "2Gi"
        cpu: "400m"
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 10Gi
    ## Extra labels for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## Annotations for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Node labels for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
## @skip jaeger
## ref: https://github.com/bitnami/charts/blob/main/bitnami/jaeger/values.yaml
##
jaeger:
  ## @param jaeger.image.registry [default: docker.io] jaeger image registry
  ## @param jaeger.image.repository [default: jaegertracing/all-in-one] jaeger image repository
  ## @param jaeger.image.tag [default:  1.61.0] jaeger image tag
  ## @param jaeger.image.pullPolicy metricsExporter jaeger pull policy
  ## @param jaeger.image.pullSecrets metricsExporter jaeger pull secrets
  image:
    registry: docker.io
    repository: jaegertracing/all-in-one
    tag: 1.61.0
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param jaeger.replicas Number of jaeger replicas to deploy
  ##
  replicas: 1
  ## @skip jaeger.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  ##
  resources: 
    requests: 
      memory: 512Mi
      cpu: 500m
    limits: 
      memory: 768Mi
      cpu: 750m
  service:
    ## Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)
    ##
    type: ClusterIP

    ports: 
      grpc_internal: 4317
      http_ui: 16686

    ## Annotations for service
    ##
    annotations: {}
  ## Extra labels for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## Annotations for pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Node labels for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## Tolerations for pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  ## jaeger ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## Enable ingress controller resource
    ##
    enabled: false
    ## Ingress Path type
    ##
    pathType: ImplementationSpecific
    ## @param jaeger.ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param jaeger.ingress.hostname Default host for the ingress record
    ##
    hostname: 
    ## @param jaeger.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: ""
    ## @param jaeger.ingress.path The Path to jaeger. You may need to set this to '/*' in order to use this with ALB ingress controllers.
    ##
    path: /
    ## @param jaeger.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ##
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations:
    ## @param jaeger.ingress.extraPaths Any additional paths that may need to be added to the ingress under the main host
    ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param jaeger.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: example.local
    ##     http:
    ##       path: /
    ##       backend:
    ##         service:
    ##           name: example-svc
    ##           port:
    ##             name: http
    ##
    extraRules: []
  args: []
## @skip elasticsearch
## ref: https://github.com/bitnami/charts/blob/main/bitnami/elasticsearch/values.yaml
##
elasticsearch:
  ## @param elasticsearch.enabled Whether to deploy a elasticsearch server to use as Mastodon's search engine
  ## To use an external server set this to false and configure the externalElasticsearch parameters
  ##
  enabled: true
  ## @param elasticsearch.sysctlImage.enabled Enable kernel settings modifier image for Elasticsearch
  ##
  sysctlImage:
    enabled: true
  ## @param elasticsearch.security.enabled Enable security settings for Elasticsearch
  ## @param elasticsearch.security.existingSecret Name of an existing secret containing the elasticsearch credentials
  ## @param elasticsearch.security.tls.restEncryption Enable TLS encryption for REST API
  ##
  security:
    enabled: false
    existingSecret: ""
    tls:
      restEncryption: false
  ## Elasticsearch master-eligible node parameters
  ## @param elasticsearch.master.replicaCount Desired number of Elasticsearch master-eligible nodes
  ##
  master:
    masterOnly: false
    replicaCount: 1
    terminationGracePeriodSeconds: 5
    podSecurityContext:
      enabled: true
      fsGroup: 1000
    persistence:
      enabled: true
      size: 80Gi
      accessModes:
      - ReadWriteOnce
    resources: 
      requests: 
        memory: 2Gi
        cpu: 1
      limits: 
        memory: 4Gi
        cpu: 2
    extraEnvVars:
    - name: ES_JAVA_OPTS
      value: "-server -Xms1G -Xmx2G"
    ## Extra labels for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## Annotations for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ## Affinity for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
    ## Node labels for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    
  ## Elasticsearch coordinating-only node parameters
  ## @param elasticsearch.coordinating.replicaCount Desired number of Elasticsearch coordinating-only nodes
  ##
  coordinating:
    replicaCount: 0
  ## Elasticsearch data node parameters
  ## @param elasticsearch.data.replicaCount Desired number of Elasticsearch data nodes
  ##
  data:
    replicaCount: 0
  ## Elasticsearch ingest node parameters
  ## @param elasticsearch.ingest.replicaCount Desired number of Elasticsearch ingest nodes
  ##
  ingest:
    replicaCount: 0
  ## @param elasticsearch.service.ports.restAPI Elasticsearch REST API port
  ##
  service:
    ports:
      restAPI: 9200
## @skip grafana
## ref: https://github.com/bitnami/charts/blob/main/bitnami/grafana/values.yaml
##
grafana:
  admin:
    user: admin
    password: admin
  dashboardsProvider:
    enabled: true
  dashboardsConfigMaps:
  - configMapName: digma-grafana-activities-dashboards
    fileName: activities.json
  - configMapName: digma-grafana-environment-dashboards
    fileName: environment.json
  - configMapName: digma-grafana-kafka-dashboards
    fileName: kafka.json
  datasources:
    secretName: grafana-datasource
  grafana:
    resources: 
      requests: 
        memory: 512Mi
        cpu: 500m
      limits: 
        memory: 768Mi
        cpu: 750m
    ## Extra labels for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ##  Annotations for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ##  Node labels for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ##  Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
## @skip prometheus
## ref: https://github.com/bitnami/charts/blob/main/bitnami/prometheus/values.yaml
##
prometheus:
  enabled: false
  fullnameOverride: "digma-prometheus" #todo shay
  alertmanager:
    enabled: false
  server:
    existingConfigmap: "digma-prometheus-service"
    existingConfigmapKey: "prometheus.yaml"
    service:
      type: ClusterIP
      ports:
        http: 9090
    resources: 
      requests: 
        memory: 512Mi
        cpu: 500m
      limits: 
        memory: 768Mi
        cpu: 750m
    ## Extra labels for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ##  Annotations for pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}

    ##  Node labels for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ##  Tolerations for pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
        
  persistence:
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: 20Gi
## @skip kafka
## ref: https://github.com/bitnami/charts/blob/main/bitnami/kafka/values.yaml
##
kafka:
  kraft:
    clusterId: h4U35I9QRnGhbgsEQAlXAw
  controller:
    resources:
      requests:
        memory: 400Mi
        cpu: 200m
      limits: 
        memory: 3Gi
        cpu: 1000m
    persistence:
      enabled: true
      accessModes:
      - ReadWriteOnce
      size: 80Gi
  listeners:
    client:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
  extraConfig: |
    log.retention.check.interval.ms = 100000
    log.roll.ms = 500000
    log.retention.minutes = 10
  service:
    ports:
      client: 9092
      controller: 9093
## @skip debug
##
debug:
  enabled: true
  pullSecrets: []
  kafkaUi:
    image:
      registry: docker.io
      repository: provectuslabs/kafka-ui
      tag: v0.7.1
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
    port: 8080

  redisCommander:
    image:
      registry: docker.io
      repository: rediscommander/redis-commander
      tag: latest
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
    port: 8081
   
  pgadmin:
    image:
      registry: docker.io
      repository: dpage/pgadmin4
      tag: latest
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
      ##
      pullPolicy: IfNotPresent
    port: 8082
    env: #todo shay
    - name: PGADMIN_DEFAULT_EMAIL
      value: "admin@admin.com"
    - name: PGADMIN_DEFAULT_PASSWORD
      value: "admin"
## @skip presets
##
presets:
  small:
    collectorWorker:
      replicas: 1
    measurementAnalysis: 
      replicas: 1
    pipelineWorker: 
      replicas: 1
  medium:
    collectorWorker:
      replicas: 4
    measurementAnalysis: 
      replicas: 4
    pipelineWorker: 
      replicas: 1
  large:
    collectorWorker:
      replicas: 6
    measurementAnalysis: 
      replicas: 4
    pipelineWorker: 
      replicas: 4


    
