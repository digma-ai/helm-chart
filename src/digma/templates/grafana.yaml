{{- if eq .Values.digmaSelfDiagnosis.otlpExporterEndpoint "local" }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-grafana-stateful-set
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  serviceName: {{ .Release.Name }}-grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: init-grafana
        image: alpine/git:2.45.2
        command:
        - 'sh'
        - '-c'
        - |
          git clone -b local-prom-grafana https://github.com/digma-ai/helm-chart;
          cd helm-chart/src/digma/grafana-config;

          mkdir -p /var/lib/grafana/dashboards;
          mkdir -p /etc/grafana/provisioning/dashboards;
          mkdir -p /etc/grafana/provisioning/datasources;

          cp -r dashboards/* /var/lib/grafana/dashboards/;
          cp dashboard.yaml /etc/grafana/provisioning/dashboards/main.yaml;
          cp datasource.yaml /etc/grafana/provisioning/datasources/main.yaml;
        
          chown -R 472:472 /var/lib/grafana/;
          chown -R 472:472 /etc/grafana/;
          ls -l /var/lib
          ls -l /etc
          echo 'Finished setting grafana config files'
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
          capabilities:
            add:
              - CHOWN
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
          subPath: grafana-var-lib
        - name: grafana-data
          mountPath: /etc/grafana
          subPath: grafana-etc

      containers:
      - name: grafana
        image: grafana/grafana:10.3.3
        securityContext:
          runAsUser: 472
          runAsGroup: 472
          fsGroup: 472
          runAsNonRoot: true
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_USERS_ALLOW_SIGN_UP
          value: 'false'
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
          subPath: grafana-var-lib
        - name: grafana-data
          mountPath: /etc/grafana
          subPath: grafana-etc

  volumeClaimTemplates:
  - metadata:
      name: grafana-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    protocol: TCP

{{- end }}