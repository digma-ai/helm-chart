{{- if .Values.digmaSelfDiagnosis.otlpExporterEndpoint }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-otel-collector-config
data:
  key-collector-yaml: |
    receivers:
      otlp:
        protocols: 
          grpc:
      kafkametrics:
        protocol_version: 2.0.0
        collection_interval: 10s
        brokers: [{{ printf "%s:9092" (tpl .Values.kafka.host .)}}]
        scrapers:
          - brokers
          - topics
          - consumers
    processors:
      batch:
      attributes/add_source_env:
        actions:
          - key: source_env
            value: {{.Values.digma.environmentName}}
            action: insert

    exporters:
      logging:
        verbosity: detailed
      otlp:
        endpoint: {{.Values.digmaSelfDiagnosis.otlpExporterEndpoint}}
      prometheus:
        endpoint: 0.0.0.0:7777
        send_timestamps: true
        metric_expiration: 10m

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp, kafkametrics]
          processors: [attributes/add_source_env, batch]
          exporters: [otlp, prometheus]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-otel-collector-df-deployment
  labels:
    app: otel-collector-df
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector-df
  template:
    metadata:
      labels:
        app: otel-collector-df
    spec:
      serviceAccountName: {{ .Release.Name }}-otel-collector
      containers:
        - name: otel-collector-df
          image: otel/opentelemetry-collector-contrib:0.103.0
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 200m
              memory: 300Mi
          ports:
            - containerPort: 4317
          args:
            - --config=/conf/collector.yaml
          volumeMounts:
            - name: vn-config
              mountPath: /conf
              readOnly: true
      volumes:
        - name: vn-config # volume name
          configMap:
            name: {{ .Release.Name }}-otel-collector-config # configMap name
            items:
              - key: "key-collector-yaml"
                path: "collector.yaml"
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-otel-collector
spec:
  selector:
    app: otel-collector-df
  ports:
  - name: grpc-port
    port: 4317
    protocol: TCP
  - name: debug
    port: 7777
    protocol: TCP

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-otel-collector
  labels:
    app: otel-collector-df
 
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-otel-collector
  labels:
    app: otel-collector-df
rules:
- apiGroups: [""]
  resources: [events, namespaces, namespaces/status, nodes, nodes/spec, pods, pods/status, replicationcontrollers, replicationcontrollers/status, resourcequotas, services]
  verbs: [get, list, watch]

- apiGroups: [apps]
  resources: [daemonsets, deployments, replicasets, statefulsets]
  verbs: [get, list, watch]

- apiGroups: [extensions]
  resources: [daemonsets, deployments, replicasets]
  verbs: [get, list, watch]

- apiGroups: [batch]
  resources: [jobs, cronjobs]
  verbs: [get, list, watch]

- apiGroups: [autoscaling]
  resources: [horizontalpodautoscalers]
  verbs: [get, list, watch]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-otel-collector
  labels:
    app: otel-collector-df
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-otel-collector
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-otel-collector
  namespace: {{ .Release.Namespace }}

{{- end -}}